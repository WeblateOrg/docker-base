# Copyright © Michal Čihař <michal@weblate.org>
#
# SPDX-License-Identifier: MIT

name: Docker Image CI

on:
  schedule:
  - cron: 0 10 * * *
  push:
    branches-ignore:
    - renovate/**
    tags:
    - v*
  pull_request:

jobs:
  base-build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        architecture:
        - amd64
        - arm64
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
          # list of Docker images to use as base name for tags
        images: |
          weblate/base
          ghcr.io/weblateorg/base
         # generate Docker tags based on the following events/attributes
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=edge,branch=main
          type=sha,format=long
    - name: Build
      id: build
      uses: docker/build-push-action@v6
      with:
        context: base
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/${{ matrix.architecture }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        outputs: type=docker,dest=base-${{ matrix.architecture }}.tar
    - uses: actions/upload-artifact@v4
      with:
        path: base-${{ matrix.architecture }}.tar
        name: base-${{ matrix.architecture }}

  base-publish:
    needs:
    - base-build
    permissions:
      packages: write
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
          # list of Docker images to use as base name for tags
        images: |
          weblate/base
          ghcr.io/weblateorg/base
         # generate Docker tags based on the following events/attributes
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=edge,branch=main
          type=sha,format=long

    - uses: actions/download-artifact@v4
      with:
        pattern: base-*
        merge-multiple: true
        path: images

    - name: Load containers
      working-directory: images
      run: |
        ls
        for arch in amd64 arm64 ; do
          docker image load --input "base-$arch.tar"
          docker image tag weblate/base:${{ steps.meta.outputs.version }} weblate/base:${{ steps.meta.outputs.version }}-$arch
          docker image rm weblate/base:${{ steps.meta.outputs.version }}
        done
        docker image ls --digests

    - name: Create manifest list and push
      working-directory: images
      run: |
        docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") weblate/base@${{ steps.meta.outputs.version }}-amd64 weblate/base@${{ steps.meta.outputs.version }}-arm64

    - name: Inspect image
      run: docker buildx imagetools inspect weblate/base:${{ steps.meta.outputs.version }}

    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GHCR
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push to Docker Hub
      if: github.event_name != 'pull_request'
      run: docker manifest push weblate/base:${{ steps.meta.outputs.version }}

    - name: Push to GitHub
      if: github.event_name != 'pull_request'
      run: docker manifest push ghcr.io/weblate/base:${{ steps.meta.outputs.version }}


  docker:
    permissions:
      packages: write
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4

    - uses: actions/upload-artifact@v4
      with:
        path: base.tar
        name: base

    - name: Load (base)
      run: docker image load --input base.tar.gz

    - name: Pin base for dev
      run: sed -i "s@FROM weblate/base:latest@FROM weblate/base:sha-${{ github.sha }}@" dev/Dockerfile

    - name: Docker meta (dev)
      id: dev
      uses: docker/metadata-action@v5
      with:
          # list of Docker images to use as base name for tags
        images: |
          weblate/dev
          ghcr.io/weblateorg/dev
         # generate Docker tags based on the following events/attributes
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=edge,branch=main
          type=sha,format=long

    - name: Build and push (dev)
      uses: docker/build-push-action@v6
      with:
        context: dev
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.dev.outputs.tags }}
        labels: ${{ steps.dev.outputs.labels }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=gha
        cache-to: type=gha,mode=max
